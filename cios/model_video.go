/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// Video struct for Video
type Video struct {
	Name *string `json:"name,omitempty"`
	Id string `json:"id"`
	DeviceId *string `json:"device_id,omitempty"`
	ResourceOwnerId string `json:"resource_owner_id"`
	VideoName *string `json:"video_name,omitempty"`
	VideoDescription *string `json:"video_description,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
}

// NewVideo instantiates a new Video object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideo(id string, resourceOwnerId string, createdAt string, updatedAt string, ) *Video {
	this := Video{}
	this.Id = id
	this.ResourceOwnerId = resourceOwnerId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewVideoWithDefaults instantiates a new Video object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoWithDefaults() *Video {
	this := Video{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Video) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Video) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Video) SetName(v string) {
	o.Name = &v
}

// GetId returns the Id field value
func (o *Video) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Video) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Video) SetId(v string) {
	o.Id = v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *Video) GetDeviceId() string {
	if o == nil || o.DeviceId == nil {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetDeviceIdOk() (*string, bool) {
	if o == nil || o.DeviceId == nil {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *Video) HasDeviceId() bool {
	if o != nil && o.DeviceId != nil {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *Video) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetResourceOwnerId returns the ResourceOwnerId field value
func (o *Video) GetResourceOwnerId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ResourceOwnerId
}

// GetResourceOwnerIdOk returns a tuple with the ResourceOwnerId field value
// and a boolean to check if the value has been set.
func (o *Video) GetResourceOwnerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceOwnerId, true
}

// SetResourceOwnerId sets field value
func (o *Video) SetResourceOwnerId(v string) {
	o.ResourceOwnerId = v
}

// GetVideoName returns the VideoName field value if set, zero value otherwise.
func (o *Video) GetVideoName() string {
	if o == nil || o.VideoName == nil {
		var ret string
		return ret
	}
	return *o.VideoName
}

// GetVideoNameOk returns a tuple with the VideoName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetVideoNameOk() (*string, bool) {
	if o == nil || o.VideoName == nil {
		return nil, false
	}
	return o.VideoName, true
}

// HasVideoName returns a boolean if a field has been set.
func (o *Video) HasVideoName() bool {
	if o != nil && o.VideoName != nil {
		return true
	}

	return false
}

// SetVideoName gets a reference to the given string and assigns it to the VideoName field.
func (o *Video) SetVideoName(v string) {
	o.VideoName = &v
}

// GetVideoDescription returns the VideoDescription field value if set, zero value otherwise.
func (o *Video) GetVideoDescription() string {
	if o == nil || o.VideoDescription == nil {
		var ret string
		return ret
	}
	return *o.VideoDescription
}

// GetVideoDescriptionOk returns a tuple with the VideoDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetVideoDescriptionOk() (*string, bool) {
	if o == nil || o.VideoDescription == nil {
		return nil, false
	}
	return o.VideoDescription, true
}

// HasVideoDescription returns a boolean if a field has been set.
func (o *Video) HasVideoDescription() bool {
	if o != nil && o.VideoDescription != nil {
		return true
	}

	return false
}

// SetVideoDescription gets a reference to the given string and assigns it to the VideoDescription field.
func (o *Video) SetVideoDescription(v string) {
	o.VideoDescription = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *Video) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *Video) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *Video) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Video) GetCreatedAt() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Video) GetCreatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Video) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Video) GetUpdatedAt() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Video) GetUpdatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Video) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o Video) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.DeviceId != nil {
		toSerialize["device_id"] = o.DeviceId
	}
	if true {
		toSerialize["resource_owner_id"] = o.ResourceOwnerId
	}
	if o.VideoName != nil {
		toSerialize["video_name"] = o.VideoName
	}
	if o.VideoDescription != nil {
		toSerialize["video_description"] = o.VideoDescription
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableVideo struct {
	value *Video
	isSet bool
}

func (v NullableVideo) Get() *Video {
	return v.value
}

func (v *NullableVideo) Set(val *Video) {
	v.value = val
	v.isSet = true
}

func (v NullableVideo) IsSet() bool {
	return v.isSet
}

func (v *NullableVideo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideo(val *Video) *NullableVideo {
	return &NullableVideo{value: val, isSet: true}
}

func (v NullableVideo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



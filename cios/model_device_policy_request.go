/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// DevicePolicyRequest struct for DevicePolicyRequest
type DevicePolicyRequest struct {
	ResourceOwnerId *string `json:"resource_owner_id,omitempty"`
}

// NewDevicePolicyRequest instantiates a new DevicePolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevicePolicyRequest() *DevicePolicyRequest {
	this := DevicePolicyRequest{}
	return &this
}

// NewDevicePolicyRequestWithDefaults instantiates a new DevicePolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevicePolicyRequestWithDefaults() *DevicePolicyRequest {
	this := DevicePolicyRequest{}
	return &this
}

// GetResourceOwnerId returns the ResourceOwnerId field value if set, zero value otherwise.
func (o *DevicePolicyRequest) GetResourceOwnerId() string {
	if o == nil || o.ResourceOwnerId == nil {
		var ret string
		return ret
	}
	return *o.ResourceOwnerId
}

// GetResourceOwnerIdOk returns a tuple with the ResourceOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicePolicyRequest) GetResourceOwnerIdOk() (*string, bool) {
	if o == nil || o.ResourceOwnerId == nil {
		return nil, false
	}
	return o.ResourceOwnerId, true
}

// HasResourceOwnerId returns a boolean if a field has been set.
func (o *DevicePolicyRequest) HasResourceOwnerId() bool {
	if o != nil && o.ResourceOwnerId != nil {
		return true
	}

	return false
}

// SetResourceOwnerId gets a reference to the given string and assigns it to the ResourceOwnerId field.
func (o *DevicePolicyRequest) SetResourceOwnerId(v string) {
	o.ResourceOwnerId = &v
}

func (o DevicePolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceOwnerId != nil {
		toSerialize["resource_owner_id"] = o.ResourceOwnerId
	}
	return json.Marshal(toSerialize)
}

type NullableDevicePolicyRequest struct {
	value *DevicePolicyRequest
	isSet bool
}

func (v NullableDevicePolicyRequest) Get() *DevicePolicyRequest {
	return v.value
}

func (v *NullableDevicePolicyRequest) Set(val *DevicePolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDevicePolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDevicePolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevicePolicyRequest(val *DevicePolicyRequest) *NullableDevicePolicyRequest {
	return &NullableDevicePolicyRequest{value: val, isSet: true}
}

func (v NullableDevicePolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevicePolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



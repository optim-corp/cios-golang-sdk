/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// ConnectedDeviceResult struct for ConnectedDeviceResult
type ConnectedDeviceResult struct {
	Name *string `json:"name,omitempty"`
	DeviceNumber *string `json:"device_number,omitempty"`
	DeviceType *string `json:"device_type,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
	Status *string `json:"status,omitempty"`
	ErrorMessage *string `json:"error_message,omitempty"`
	CustomItems *string `json:"custom_items,omitempty"`
}

// NewConnectedDeviceResult instantiates a new ConnectedDeviceResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectedDeviceResult() *ConnectedDeviceResult {
	this := ConnectedDeviceResult{}
	return &this
}

// NewConnectedDeviceResultWithDefaults instantiates a new ConnectedDeviceResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectedDeviceResultWithDefaults() *ConnectedDeviceResult {
	this := ConnectedDeviceResult{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConnectedDeviceResult) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectedDeviceResult) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConnectedDeviceResult) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConnectedDeviceResult) SetName(v string) {
	o.Name = &v
}

// GetDeviceNumber returns the DeviceNumber field value if set, zero value otherwise.
func (o *ConnectedDeviceResult) GetDeviceNumber() string {
	if o == nil || o.DeviceNumber == nil {
		var ret string
		return ret
	}
	return *o.DeviceNumber
}

// GetDeviceNumberOk returns a tuple with the DeviceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectedDeviceResult) GetDeviceNumberOk() (*string, bool) {
	if o == nil || o.DeviceNumber == nil {
		return nil, false
	}
	return o.DeviceNumber, true
}

// HasDeviceNumber returns a boolean if a field has been set.
func (o *ConnectedDeviceResult) HasDeviceNumber() bool {
	if o != nil && o.DeviceNumber != nil {
		return true
	}

	return false
}

// SetDeviceNumber gets a reference to the given string and assigns it to the DeviceNumber field.
func (o *ConnectedDeviceResult) SetDeviceNumber(v string) {
	o.DeviceNumber = &v
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise.
func (o *ConnectedDeviceResult) GetDeviceType() string {
	if o == nil || o.DeviceType == nil {
		var ret string
		return ret
	}
	return *o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectedDeviceResult) GetDeviceTypeOk() (*string, bool) {
	if o == nil || o.DeviceType == nil {
		return nil, false
	}
	return o.DeviceType, true
}

// HasDeviceType returns a boolean if a field has been set.
func (o *ConnectedDeviceResult) HasDeviceType() bool {
	if o != nil && o.DeviceType != nil {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given string and assigns it to the DeviceType field.
func (o *ConnectedDeviceResult) SetDeviceType(v string) {
	o.DeviceType = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ConnectedDeviceResult) GetTimestamp() string {
	if o == nil || o.Timestamp == nil {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectedDeviceResult) GetTimestampOk() (*string, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ConnectedDeviceResult) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *ConnectedDeviceResult) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ConnectedDeviceResult) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectedDeviceResult) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ConnectedDeviceResult) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ConnectedDeviceResult) SetStatus(v string) {
	o.Status = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *ConnectedDeviceResult) GetErrorMessage() string {
	if o == nil || o.ErrorMessage == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectedDeviceResult) GetErrorMessageOk() (*string, bool) {
	if o == nil || o.ErrorMessage == nil {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ConnectedDeviceResult) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage != nil {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *ConnectedDeviceResult) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetCustomItems returns the CustomItems field value if set, zero value otherwise.
func (o *ConnectedDeviceResult) GetCustomItems() string {
	if o == nil || o.CustomItems == nil {
		var ret string
		return ret
	}
	return *o.CustomItems
}

// GetCustomItemsOk returns a tuple with the CustomItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectedDeviceResult) GetCustomItemsOk() (*string, bool) {
	if o == nil || o.CustomItems == nil {
		return nil, false
	}
	return o.CustomItems, true
}

// HasCustomItems returns a boolean if a field has been set.
func (o *ConnectedDeviceResult) HasCustomItems() bool {
	if o != nil && o.CustomItems != nil {
		return true
	}

	return false
}

// SetCustomItems gets a reference to the given string and assigns it to the CustomItems field.
func (o *ConnectedDeviceResult) SetCustomItems(v string) {
	o.CustomItems = &v
}

func (o ConnectedDeviceResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.DeviceNumber != nil {
		toSerialize["device_number"] = o.DeviceNumber
	}
	if o.DeviceType != nil {
		toSerialize["device_type"] = o.DeviceType
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.ErrorMessage != nil {
		toSerialize["error_message"] = o.ErrorMessage
	}
	if o.CustomItems != nil {
		toSerialize["custom_items"] = o.CustomItems
	}
	return json.Marshal(toSerialize)
}

type NullableConnectedDeviceResult struct {
	value *ConnectedDeviceResult
	isSet bool
}

func (v NullableConnectedDeviceResult) Get() *ConnectedDeviceResult {
	return v.value
}

func (v *NullableConnectedDeviceResult) Set(val *ConnectedDeviceResult) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectedDeviceResult) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectedDeviceResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectedDeviceResult(val *ConnectedDeviceResult) *NullableConnectedDeviceResult {
	return &NullableConnectedDeviceResult{value: val, isSet: true}
}

func (v NullableConnectedDeviceResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectedDeviceResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



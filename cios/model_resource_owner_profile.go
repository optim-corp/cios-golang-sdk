/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// ResourceOwnerProfile struct for ResourceOwnerProfile
type ResourceOwnerProfile struct {
	DisplayName *string `json:"display_name,omitempty"`
	Website *string `json:"website,omitempty"`
}

// NewResourceOwnerProfile instantiates a new ResourceOwnerProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceOwnerProfile() *ResourceOwnerProfile {
	this := ResourceOwnerProfile{}
	return &this
}

// NewResourceOwnerProfileWithDefaults instantiates a new ResourceOwnerProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceOwnerProfileWithDefaults() *ResourceOwnerProfile {
	this := ResourceOwnerProfile{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ResourceOwnerProfile) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceOwnerProfile) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ResourceOwnerProfile) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ResourceOwnerProfile) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *ResourceOwnerProfile) GetWebsite() string {
	if o == nil || o.Website == nil {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceOwnerProfile) GetWebsiteOk() (*string, bool) {
	if o == nil || o.Website == nil {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *ResourceOwnerProfile) HasWebsite() bool {
	if o != nil && o.Website != nil {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *ResourceOwnerProfile) SetWebsite(v string) {
	o.Website = &v
}

func (o ResourceOwnerProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Website != nil {
		toSerialize["website"] = o.Website
	}
	return json.Marshal(toSerialize)
}

type NullableResourceOwnerProfile struct {
	value *ResourceOwnerProfile
	isSet bool
}

func (v NullableResourceOwnerProfile) Get() *ResourceOwnerProfile {
	return v.value
}

func (v *NullableResourceOwnerProfile) Set(val *ResourceOwnerProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceOwnerProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceOwnerProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceOwnerProfile(val *ResourceOwnerProfile) *NullableResourceOwnerProfile {
	return &NullableResourceOwnerProfile{value: val, isSet: true}
}

func (v NullableResourceOwnerProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceOwnerProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// MultipleConstitutionComponent struct for MultipleConstitutionComponent
type MultipleConstitutionComponent struct {
	Total *int64 `json:"total,omitempty"`
	Components *[]ConstitutionComponent `json:"components,omitempty"`
}

// NewMultipleConstitutionComponent instantiates a new MultipleConstitutionComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipleConstitutionComponent() *MultipleConstitutionComponent {
	this := MultipleConstitutionComponent{}
	return &this
}

// NewMultipleConstitutionComponentWithDefaults instantiates a new MultipleConstitutionComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipleConstitutionComponentWithDefaults() *MultipleConstitutionComponent {
	this := MultipleConstitutionComponent{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *MultipleConstitutionComponent) GetTotal() int64 {
	if o == nil || o.Total == nil {
		var ret int64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipleConstitutionComponent) GetTotalOk() (*int64, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *MultipleConstitutionComponent) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int64 and assigns it to the Total field.
func (o *MultipleConstitutionComponent) SetTotal(v int64) {
	o.Total = &v
}

// GetComponents returns the Components field value if set, zero value otherwise.
func (o *MultipleConstitutionComponent) GetComponents() []ConstitutionComponent {
	if o == nil || o.Components == nil {
		var ret []ConstitutionComponent
		return ret
	}
	return *o.Components
}

// GetComponentsOk returns a tuple with the Components field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipleConstitutionComponent) GetComponentsOk() (*[]ConstitutionComponent, bool) {
	if o == nil || o.Components == nil {
		return nil, false
	}
	return o.Components, true
}

// HasComponents returns a boolean if a field has been set.
func (o *MultipleConstitutionComponent) HasComponents() bool {
	if o != nil && o.Components != nil {
		return true
	}

	return false
}

// SetComponents gets a reference to the given []ConstitutionComponent and assigns it to the Components field.
func (o *MultipleConstitutionComponent) SetComponents(v []ConstitutionComponent) {
	o.Components = &v
}

func (o MultipleConstitutionComponent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.Components != nil {
		toSerialize["components"] = o.Components
	}
	return json.Marshal(toSerialize)
}

type NullableMultipleConstitutionComponent struct {
	value *MultipleConstitutionComponent
	isSet bool
}

func (v NullableMultipleConstitutionComponent) Get() *MultipleConstitutionComponent {
	return v.value
}

func (v *NullableMultipleConstitutionComponent) Set(val *MultipleConstitutionComponent) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipleConstitutionComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipleConstitutionComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipleConstitutionComponent(val *MultipleConstitutionComponent) *NullableMultipleConstitutionComponent {
	return &NullableMultipleConstitutionComponent{value: val, isSet: true}
}

func (v NullableMultipleConstitutionComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipleConstitutionComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



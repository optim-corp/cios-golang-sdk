/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// ApplicationClient struct for ApplicationClient
type ApplicationClient struct {
	ClientId *string `json:"client_id,omitempty"`
}

// NewApplicationClient instantiates a new ApplicationClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationClient() *ApplicationClient {
	this := ApplicationClient{}
	return &this
}

// NewApplicationClientWithDefaults instantiates a new ApplicationClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationClientWithDefaults() *ApplicationClient {
	this := ApplicationClient{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *ApplicationClient) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationClient) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *ApplicationClient) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *ApplicationClient) SetClientId(v string) {
	o.ClientId = &v
}

func (o ApplicationClient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationClient struct {
	value *ApplicationClient
	isSet bool
}

func (v NullableApplicationClient) Get() *ApplicationClient {
	return v.value
}

func (v *NullableApplicationClient) Set(val *ApplicationClient) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationClient) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationClient(val *ApplicationClient) *NullableApplicationClient {
	return &NullableApplicationClient{value: val, isSet: true}
}

func (v NullableApplicationClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



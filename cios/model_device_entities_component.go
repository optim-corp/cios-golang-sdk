/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// DeviceEntitiesComponent struct for DeviceEntitiesComponent
type DeviceEntitiesComponent struct {
	Id string `json:"id"`
	Type ComponentTypeEnum `json:"type"`
	ParentId *string `json:"parent_id,omitempty"`
	Attribute *map[string]interface{} `json:"attribute,omitempty"`
	DisplayInfo *[]DisplayInfo `json:"display_info,omitempty"`
	Components *[]DeviceEntitiesComponent `json:"components,omitempty"`
}

// NewDeviceEntitiesComponent instantiates a new DeviceEntitiesComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceEntitiesComponent(id string, type_ ComponentTypeEnum, ) *DeviceEntitiesComponent {
	this := DeviceEntitiesComponent{}
	this.Id = id
	this.Type = type_
	return &this
}

// NewDeviceEntitiesComponentWithDefaults instantiates a new DeviceEntitiesComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceEntitiesComponentWithDefaults() *DeviceEntitiesComponent {
	this := DeviceEntitiesComponent{}
	return &this
}

// GetId returns the Id field value
func (o *DeviceEntitiesComponent) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DeviceEntitiesComponent) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DeviceEntitiesComponent) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *DeviceEntitiesComponent) GetType() ComponentTypeEnum {
	if o == nil  {
		var ret ComponentTypeEnum
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DeviceEntitiesComponent) GetTypeOk() (*ComponentTypeEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DeviceEntitiesComponent) SetType(v ComponentTypeEnum) {
	o.Type = v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *DeviceEntitiesComponent) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEntitiesComponent) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *DeviceEntitiesComponent) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *DeviceEntitiesComponent) SetParentId(v string) {
	o.ParentId = &v
}

// GetAttribute returns the Attribute field value if set, zero value otherwise.
func (o *DeviceEntitiesComponent) GetAttribute() map[string]interface{} {
	if o == nil || o.Attribute == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEntitiesComponent) GetAttributeOk() (*map[string]interface{}, bool) {
	if o == nil || o.Attribute == nil {
		return nil, false
	}
	return o.Attribute, true
}

// HasAttribute returns a boolean if a field has been set.
func (o *DeviceEntitiesComponent) HasAttribute() bool {
	if o != nil && o.Attribute != nil {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given map[string]interface{} and assigns it to the Attribute field.
func (o *DeviceEntitiesComponent) SetAttribute(v map[string]interface{}) {
	o.Attribute = &v
}

// GetDisplayInfo returns the DisplayInfo field value if set, zero value otherwise.
func (o *DeviceEntitiesComponent) GetDisplayInfo() []DisplayInfo {
	if o == nil || o.DisplayInfo == nil {
		var ret []DisplayInfo
		return ret
	}
	return *o.DisplayInfo
}

// GetDisplayInfoOk returns a tuple with the DisplayInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEntitiesComponent) GetDisplayInfoOk() (*[]DisplayInfo, bool) {
	if o == nil || o.DisplayInfo == nil {
		return nil, false
	}
	return o.DisplayInfo, true
}

// HasDisplayInfo returns a boolean if a field has been set.
func (o *DeviceEntitiesComponent) HasDisplayInfo() bool {
	if o != nil && o.DisplayInfo != nil {
		return true
	}

	return false
}

// SetDisplayInfo gets a reference to the given []DisplayInfo and assigns it to the DisplayInfo field.
func (o *DeviceEntitiesComponent) SetDisplayInfo(v []DisplayInfo) {
	o.DisplayInfo = &v
}

// GetComponents returns the Components field value if set, zero value otherwise.
func (o *DeviceEntitiesComponent) GetComponents() []DeviceEntitiesComponent {
	if o == nil || o.Components == nil {
		var ret []DeviceEntitiesComponent
		return ret
	}
	return *o.Components
}

// GetComponentsOk returns a tuple with the Components field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEntitiesComponent) GetComponentsOk() (*[]DeviceEntitiesComponent, bool) {
	if o == nil || o.Components == nil {
		return nil, false
	}
	return o.Components, true
}

// HasComponents returns a boolean if a field has been set.
func (o *DeviceEntitiesComponent) HasComponents() bool {
	if o != nil && o.Components != nil {
		return true
	}

	return false
}

// SetComponents gets a reference to the given []DeviceEntitiesComponent and assigns it to the Components field.
func (o *DeviceEntitiesComponent) SetComponents(v []DeviceEntitiesComponent) {
	o.Components = &v
}

func (o DeviceEntitiesComponent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.ParentId != nil {
		toSerialize["parent_id"] = o.ParentId
	}
	if o.Attribute != nil {
		toSerialize["attribute"] = o.Attribute
	}
	if o.DisplayInfo != nil {
		toSerialize["display_info"] = o.DisplayInfo
	}
	if o.Components != nil {
		toSerialize["components"] = o.Components
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceEntitiesComponent struct {
	value *DeviceEntitiesComponent
	isSet bool
}

func (v NullableDeviceEntitiesComponent) Get() *DeviceEntitiesComponent {
	return v.value
}

func (v *NullableDeviceEntitiesComponent) Set(val *DeviceEntitiesComponent) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceEntitiesComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceEntitiesComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceEntitiesComponent(val *DeviceEntitiesComponent) *NullableDeviceEntitiesComponent {
	return &NullableDeviceEntitiesComponent{value: val, isSet: true}
}

func (v NullableDeviceEntitiesComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceEntitiesComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



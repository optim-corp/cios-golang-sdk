/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// GroupInviteRequest struct for GroupInviteRequest
type GroupInviteRequest struct {
	Email *string `json:"email,omitempty"`
}

// NewGroupInviteRequest instantiates a new GroupInviteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupInviteRequest() *GroupInviteRequest {
	this := GroupInviteRequest{}
	return &this
}

// NewGroupInviteRequestWithDefaults instantiates a new GroupInviteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupInviteRequestWithDefaults() *GroupInviteRequest {
	this := GroupInviteRequest{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GroupInviteRequest) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupInviteRequest) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GroupInviteRequest) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GroupInviteRequest) SetEmail(v string) {
	o.Email = &v
}

func (o GroupInviteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableGroupInviteRequest struct {
	value *GroupInviteRequest
	isSet bool
}

func (v NullableGroupInviteRequest) Get() *GroupInviteRequest {
	return v.value
}

func (v *NullableGroupInviteRequest) Set(val *GroupInviteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupInviteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupInviteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupInviteRequest(val *GroupInviteRequest) *NullableGroupInviteRequest {
	return &NullableGroupInviteRequest{value: val, isSet: true}
}

func (v NullableGroupInviteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupInviteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// DeviceEntitiesComponentUpdateRequest struct for DeviceEntitiesComponentUpdateRequest
type DeviceEntitiesComponentUpdateRequest struct {
	Type *string `json:"type,omitempty"`
	ParentId *string `json:"parent_id,omitempty"`
	Attribute *map[string]interface{} `json:"attribute,omitempty"`
	DisplayInfo *DisplayInfo `json:"display_info,omitempty"`
}

// NewDeviceEntitiesComponentUpdateRequest instantiates a new DeviceEntitiesComponentUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceEntitiesComponentUpdateRequest() *DeviceEntitiesComponentUpdateRequest {
	this := DeviceEntitiesComponentUpdateRequest{}
	return &this
}

// NewDeviceEntitiesComponentUpdateRequestWithDefaults instantiates a new DeviceEntitiesComponentUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceEntitiesComponentUpdateRequestWithDefaults() *DeviceEntitiesComponentUpdateRequest {
	this := DeviceEntitiesComponentUpdateRequest{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DeviceEntitiesComponentUpdateRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEntitiesComponentUpdateRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DeviceEntitiesComponentUpdateRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DeviceEntitiesComponentUpdateRequest) SetType(v string) {
	o.Type = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *DeviceEntitiesComponentUpdateRequest) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEntitiesComponentUpdateRequest) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *DeviceEntitiesComponentUpdateRequest) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *DeviceEntitiesComponentUpdateRequest) SetParentId(v string) {
	o.ParentId = &v
}

// GetAttribute returns the Attribute field value if set, zero value otherwise.
func (o *DeviceEntitiesComponentUpdateRequest) GetAttribute() map[string]interface{} {
	if o == nil || o.Attribute == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEntitiesComponentUpdateRequest) GetAttributeOk() (*map[string]interface{}, bool) {
	if o == nil || o.Attribute == nil {
		return nil, false
	}
	return o.Attribute, true
}

// HasAttribute returns a boolean if a field has been set.
func (o *DeviceEntitiesComponentUpdateRequest) HasAttribute() bool {
	if o != nil && o.Attribute != nil {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given map[string]interface{} and assigns it to the Attribute field.
func (o *DeviceEntitiesComponentUpdateRequest) SetAttribute(v map[string]interface{}) {
	o.Attribute = &v
}

// GetDisplayInfo returns the DisplayInfo field value if set, zero value otherwise.
func (o *DeviceEntitiesComponentUpdateRequest) GetDisplayInfo() DisplayInfo {
	if o == nil || o.DisplayInfo == nil {
		var ret DisplayInfo
		return ret
	}
	return *o.DisplayInfo
}

// GetDisplayInfoOk returns a tuple with the DisplayInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEntitiesComponentUpdateRequest) GetDisplayInfoOk() (*DisplayInfo, bool) {
	if o == nil || o.DisplayInfo == nil {
		return nil, false
	}
	return o.DisplayInfo, true
}

// HasDisplayInfo returns a boolean if a field has been set.
func (o *DeviceEntitiesComponentUpdateRequest) HasDisplayInfo() bool {
	if o != nil && o.DisplayInfo != nil {
		return true
	}

	return false
}

// SetDisplayInfo gets a reference to the given DisplayInfo and assigns it to the DisplayInfo field.
func (o *DeviceEntitiesComponentUpdateRequest) SetDisplayInfo(v DisplayInfo) {
	o.DisplayInfo = &v
}

func (o DeviceEntitiesComponentUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.ParentId != nil {
		toSerialize["parent_id"] = o.ParentId
	}
	if o.Attribute != nil {
		toSerialize["attribute"] = o.Attribute
	}
	if o.DisplayInfo != nil {
		toSerialize["display_info"] = o.DisplayInfo
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceEntitiesComponentUpdateRequest struct {
	value *DeviceEntitiesComponentUpdateRequest
	isSet bool
}

func (v NullableDeviceEntitiesComponentUpdateRequest) Get() *DeviceEntitiesComponentUpdateRequest {
	return v.value
}

func (v *NullableDeviceEntitiesComponentUpdateRequest) Set(val *DeviceEntitiesComponentUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceEntitiesComponentUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceEntitiesComponentUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceEntitiesComponentUpdateRequest(val *DeviceEntitiesComponentUpdateRequest) *NullableDeviceEntitiesComponentUpdateRequest {
	return &NullableDeviceEntitiesComponentUpdateRequest{value: val, isSet: true}
}

func (v NullableDeviceEntitiesComponentUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceEntitiesComponentUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



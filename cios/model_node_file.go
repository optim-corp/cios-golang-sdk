/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// NodeFile struct for NodeFile
type NodeFile struct {
	Size *string `json:"size,omitempty"`
	Checksum *string `json:"checksum,omitempty"`
}

// NewNodeFile instantiates a new NodeFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeFile() *NodeFile {
	this := NodeFile{}
	return &this
}

// NewNodeFileWithDefaults instantiates a new NodeFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeFileWithDefaults() *NodeFile {
	this := NodeFile{}
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *NodeFile) GetSize() string {
	if o == nil || o.Size == nil {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeFile) GetSizeOk() (*string, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *NodeFile) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *NodeFile) SetSize(v string) {
	o.Size = &v
}

// GetChecksum returns the Checksum field value if set, zero value otherwise.
func (o *NodeFile) GetChecksum() string {
	if o == nil || o.Checksum == nil {
		var ret string
		return ret
	}
	return *o.Checksum
}

// GetChecksumOk returns a tuple with the Checksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeFile) GetChecksumOk() (*string, bool) {
	if o == nil || o.Checksum == nil {
		return nil, false
	}
	return o.Checksum, true
}

// HasChecksum returns a boolean if a field has been set.
func (o *NodeFile) HasChecksum() bool {
	if o != nil && o.Checksum != nil {
		return true
	}

	return false
}

// SetChecksum gets a reference to the given string and assigns it to the Checksum field.
func (o *NodeFile) SetChecksum(v string) {
	o.Checksum = &v
}

func (o NodeFile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Checksum != nil {
		toSerialize["checksum"] = o.Checksum
	}
	return json.Marshal(toSerialize)
}

type NullableNodeFile struct {
	value *NodeFile
	isSet bool
}

func (v NullableNodeFile) Get() *NodeFile {
	return v.value
}

func (v *NullableNodeFile) Set(val *NodeFile) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeFile) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeFile(val *NodeFile) *NullableNodeFile {
	return &NullableNodeFile{value: val, isSet: true}
}

func (v NullableNodeFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



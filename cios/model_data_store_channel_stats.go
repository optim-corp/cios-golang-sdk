/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// DataStoreChannelStats struct for DataStoreChannelStats
type DataStoreChannelStats struct {
	Count *string `json:"count,omitempty"`
	Size *string `json:"size,omitempty"`
	LatestAt *string `json:"latest_at,omitempty"`
}

// NewDataStoreChannelStats instantiates a new DataStoreChannelStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataStoreChannelStats() *DataStoreChannelStats {
	this := DataStoreChannelStats{}
	return &this
}

// NewDataStoreChannelStatsWithDefaults instantiates a new DataStoreChannelStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataStoreChannelStatsWithDefaults() *DataStoreChannelStats {
	this := DataStoreChannelStats{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *DataStoreChannelStats) GetCount() string {
	if o == nil || o.Count == nil {
		var ret string
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreChannelStats) GetCountOk() (*string, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *DataStoreChannelStats) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given string and assigns it to the Count field.
func (o *DataStoreChannelStats) SetCount(v string) {
	o.Count = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *DataStoreChannelStats) GetSize() string {
	if o == nil || o.Size == nil {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreChannelStats) GetSizeOk() (*string, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *DataStoreChannelStats) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *DataStoreChannelStats) SetSize(v string) {
	o.Size = &v
}

// GetLatestAt returns the LatestAt field value if set, zero value otherwise.
func (o *DataStoreChannelStats) GetLatestAt() string {
	if o == nil || o.LatestAt == nil {
		var ret string
		return ret
	}
	return *o.LatestAt
}

// GetLatestAtOk returns a tuple with the LatestAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreChannelStats) GetLatestAtOk() (*string, bool) {
	if o == nil || o.LatestAt == nil {
		return nil, false
	}
	return o.LatestAt, true
}

// HasLatestAt returns a boolean if a field has been set.
func (o *DataStoreChannelStats) HasLatestAt() bool {
	if o != nil && o.LatestAt != nil {
		return true
	}

	return false
}

// SetLatestAt gets a reference to the given string and assigns it to the LatestAt field.
func (o *DataStoreChannelStats) SetLatestAt(v string) {
	o.LatestAt = &v
}

func (o DataStoreChannelStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.LatestAt != nil {
		toSerialize["latest_at"] = o.LatestAt
	}
	return json.Marshal(toSerialize)
}

type NullableDataStoreChannelStats struct {
	value *DataStoreChannelStats
	isSet bool
}

func (v NullableDataStoreChannelStats) Get() *DataStoreChannelStats {
	return v.value
}

func (v *NullableDataStoreChannelStats) Set(val *DataStoreChannelStats) {
	v.value = val
	v.isSet = true
}

func (v NullableDataStoreChannelStats) IsSet() bool {
	return v.isSet
}

func (v *NullableDataStoreChannelStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataStoreChannelStats(val *DataStoreChannelStats) *NullableDataStoreChannelStats {
	return &NullableDataStoreChannelStats{value: val, isSet: true}
}

func (v NullableDataStoreChannelStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataStoreChannelStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



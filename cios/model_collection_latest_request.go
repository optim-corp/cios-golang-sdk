/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// CollectionLatestRequest struct for CollectionLatestRequest
type CollectionLatestRequest struct {
	ResourceOwnerId string `json:"resource_owner_id"`
	Limit *int64 `json:"limit,omitempty"`
	Offset *int64 `json:"offset,omitempty"`
	Projection *string `json:"projection,omitempty"`
}

// NewCollectionLatestRequest instantiates a new CollectionLatestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionLatestRequest(resourceOwnerId string, ) *CollectionLatestRequest {
	this := CollectionLatestRequest{}
	this.ResourceOwnerId = resourceOwnerId
	var projection string = "data"
	this.Projection = &projection
	return &this
}

// NewCollectionLatestRequestWithDefaults instantiates a new CollectionLatestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionLatestRequestWithDefaults() *CollectionLatestRequest {
	this := CollectionLatestRequest{}
	var projection string = "data"
	this.Projection = &projection
	return &this
}

// GetResourceOwnerId returns the ResourceOwnerId field value
func (o *CollectionLatestRequest) GetResourceOwnerId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ResourceOwnerId
}

// GetResourceOwnerIdOk returns a tuple with the ResourceOwnerId field value
// and a boolean to check if the value has been set.
func (o *CollectionLatestRequest) GetResourceOwnerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceOwnerId, true
}

// SetResourceOwnerId sets field value
func (o *CollectionLatestRequest) SetResourceOwnerId(v string) {
	o.ResourceOwnerId = v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *CollectionLatestRequest) GetLimit() int64 {
	if o == nil || o.Limit == nil {
		var ret int64
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionLatestRequest) GetLimitOk() (*int64, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *CollectionLatestRequest) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int64 and assigns it to the Limit field.
func (o *CollectionLatestRequest) SetLimit(v int64) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *CollectionLatestRequest) GetOffset() int64 {
	if o == nil || o.Offset == nil {
		var ret int64
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionLatestRequest) GetOffsetOk() (*int64, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *CollectionLatestRequest) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int64 and assigns it to the Offset field.
func (o *CollectionLatestRequest) SetOffset(v int64) {
	o.Offset = &v
}

// GetProjection returns the Projection field value if set, zero value otherwise.
func (o *CollectionLatestRequest) GetProjection() string {
	if o == nil || o.Projection == nil {
		var ret string
		return ret
	}
	return *o.Projection
}

// GetProjectionOk returns a tuple with the Projection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionLatestRequest) GetProjectionOk() (*string, bool) {
	if o == nil || o.Projection == nil {
		return nil, false
	}
	return o.Projection, true
}

// HasProjection returns a boolean if a field has been set.
func (o *CollectionLatestRequest) HasProjection() bool {
	if o != nil && o.Projection != nil {
		return true
	}

	return false
}

// SetProjection gets a reference to the given string and assigns it to the Projection field.
func (o *CollectionLatestRequest) SetProjection(v string) {
	o.Projection = &v
}

func (o CollectionLatestRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resource_owner_id"] = o.ResourceOwnerId
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	if o.Projection != nil {
		toSerialize["projection"] = o.Projection
	}
	return json.Marshal(toSerialize)
}

type NullableCollectionLatestRequest struct {
	value *CollectionLatestRequest
	isSet bool
}

func (v NullableCollectionLatestRequest) Get() *CollectionLatestRequest {
	return v.value
}

func (v *NullableCollectionLatestRequest) Set(val *CollectionLatestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionLatestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionLatestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionLatestRequest(val *CollectionLatestRequest) *NullableCollectionLatestRequest {
	return &NullableCollectionLatestRequest{value: val, isSet: true}
}

func (v NullableCollectionLatestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionLatestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



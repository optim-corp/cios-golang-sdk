/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// DeviceClient struct for DeviceClient
type DeviceClient struct {
	ClientId *string `json:"client_id,omitempty"`
	ClientSecret *string `json:"client_secret,omitempty"`
	// PEM
	RsaPublickey *string `json:"rsa_publickey,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
}

// NewDeviceClient instantiates a new DeviceClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceClient() *DeviceClient {
	this := DeviceClient{}
	return &this
}

// NewDeviceClientWithDefaults instantiates a new DeviceClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceClientWithDefaults() *DeviceClient {
	this := DeviceClient{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *DeviceClient) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceClient) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *DeviceClient) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *DeviceClient) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *DeviceClient) GetClientSecret() string {
	if o == nil || o.ClientSecret == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceClient) GetClientSecretOk() (*string, bool) {
	if o == nil || o.ClientSecret == nil {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *DeviceClient) HasClientSecret() bool {
	if o != nil && o.ClientSecret != nil {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *DeviceClient) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetRsaPublickey returns the RsaPublickey field value if set, zero value otherwise.
func (o *DeviceClient) GetRsaPublickey() string {
	if o == nil || o.RsaPublickey == nil {
		var ret string
		return ret
	}
	return *o.RsaPublickey
}

// GetRsaPublickeyOk returns a tuple with the RsaPublickey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceClient) GetRsaPublickeyOk() (*string, bool) {
	if o == nil || o.RsaPublickey == nil {
		return nil, false
	}
	return o.RsaPublickey, true
}

// HasRsaPublickey returns a boolean if a field has been set.
func (o *DeviceClient) HasRsaPublickey() bool {
	if o != nil && o.RsaPublickey != nil {
		return true
	}

	return false
}

// SetRsaPublickey gets a reference to the given string and assigns it to the RsaPublickey field.
func (o *DeviceClient) SetRsaPublickey(v string) {
	o.RsaPublickey = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *DeviceClient) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceClient) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *DeviceClient) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *DeviceClient) SetDisplayName(v string) {
	o.DisplayName = &v
}

func (o DeviceClient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.ClientSecret != nil {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if o.RsaPublickey != nil {
		toSerialize["rsa_publickey"] = o.RsaPublickey
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceClient struct {
	value *DeviceClient
	isSet bool
}

func (v NullableDeviceClient) Get() *DeviceClient {
	return v.value
}

func (v *NullableDeviceClient) Set(val *DeviceClient) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceClient) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceClient(val *DeviceClient) *NullableDeviceClient {
	return &NullableDeviceClient{value: val, isSet: true}
}

func (v NullableDeviceClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



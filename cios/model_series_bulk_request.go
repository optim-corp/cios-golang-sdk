/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// SeriesBulkRequest struct for SeriesBulkRequest
type SeriesBulkRequest struct {
	Data []SeriesRequest `json:"data"`
}

// NewSeriesBulkRequest instantiates a new SeriesBulkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeriesBulkRequest(data []SeriesRequest, ) *SeriesBulkRequest {
	this := SeriesBulkRequest{}
	this.Data = data
	return &this
}

// NewSeriesBulkRequestWithDefaults instantiates a new SeriesBulkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeriesBulkRequestWithDefaults() *SeriesBulkRequest {
	this := SeriesBulkRequest{}
	return &this
}

// GetData returns the Data field value
func (o *SeriesBulkRequest) GetData() []SeriesRequest {
	if o == nil  {
		var ret []SeriesRequest
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *SeriesBulkRequest) GetDataOk() (*[]SeriesRequest, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *SeriesBulkRequest) SetData(v []SeriesRequest) {
	o.Data = v
}

func (o SeriesBulkRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableSeriesBulkRequest struct {
	value *SeriesBulkRequest
	isSet bool
}

func (v NullableSeriesBulkRequest) Get() *SeriesBulkRequest {
	return v.value
}

func (v *NullableSeriesBulkRequest) Set(val *SeriesBulkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSeriesBulkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSeriesBulkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeriesBulkRequest(val *SeriesBulkRequest) *NullableSeriesBulkRequest {
	return &NullableSeriesBulkRequest{value: val, isSet: true}
}

func (v NullableSeriesBulkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeriesBulkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



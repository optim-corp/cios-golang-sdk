/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// MultipleResourceOwner struct for MultipleResourceOwner
type MultipleResourceOwner struct {
	Total int64 `json:"total"`
	ResourceOwners []ResourceOwner `json:"resource_owners"`
}

// NewMultipleResourceOwner instantiates a new MultipleResourceOwner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipleResourceOwner(total int64, resourceOwners []ResourceOwner, ) *MultipleResourceOwner {
	this := MultipleResourceOwner{}
	this.Total = total
	this.ResourceOwners = resourceOwners
	return &this
}

// NewMultipleResourceOwnerWithDefaults instantiates a new MultipleResourceOwner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipleResourceOwnerWithDefaults() *MultipleResourceOwner {
	this := MultipleResourceOwner{}
	return &this
}

// GetTotal returns the Total field value
func (o *MultipleResourceOwner) GetTotal() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *MultipleResourceOwner) GetTotalOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *MultipleResourceOwner) SetTotal(v int64) {
	o.Total = v
}

// GetResourceOwners returns the ResourceOwners field value
func (o *MultipleResourceOwner) GetResourceOwners() []ResourceOwner {
	if o == nil  {
		var ret []ResourceOwner
		return ret
	}

	return o.ResourceOwners
}

// GetResourceOwnersOk returns a tuple with the ResourceOwners field value
// and a boolean to check if the value has been set.
func (o *MultipleResourceOwner) GetResourceOwnersOk() (*[]ResourceOwner, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceOwners, true
}

// SetResourceOwners sets field value
func (o *MultipleResourceOwner) SetResourceOwners(v []ResourceOwner) {
	o.ResourceOwners = v
}

func (o MultipleResourceOwner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["resource_owners"] = o.ResourceOwners
	}
	return json.Marshal(toSerialize)
}

type NullableMultipleResourceOwner struct {
	value *MultipleResourceOwner
	isSet bool
}

func (v NullableMultipleResourceOwner) Get() *MultipleResourceOwner {
	return v.value
}

func (v *NullableMultipleResourceOwner) Set(val *MultipleResourceOwner) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipleResourceOwner) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipleResourceOwner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipleResourceOwner(val *MultipleResourceOwner) *NullableMultipleResourceOwner {
	return &NullableMultipleResourceOwner{value: val, isSet: true}
}

func (v NullableMultipleResourceOwner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipleResourceOwner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// Room struct for Room
type Room struct {
	RoomId *string `json:"room_id,omitempty"`
	VideoId *string `json:"video_id,omitempty"`
	AudioCodec *string `json:"audio_codec,omitempty"`
	VideoCodec *string `json:"video_codec,omitempty"`
	Record *bool `json:"record,omitempty"`
	RoomServerFqdn *string `json:"room_server_fqdn,omitempty"`
	ParticipantsMax *int32 `json:"participants_max,omitempty"`
	Participants *[]Participant `json:"participants,omitempty"`
}

// NewRoom instantiates a new Room object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoom() *Room {
	this := Room{}
	return &this
}

// NewRoomWithDefaults instantiates a new Room object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomWithDefaults() *Room {
	this := Room{}
	return &this
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *Room) GetRoomId() string {
	if o == nil || o.RoomId == nil {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Room) GetRoomIdOk() (*string, bool) {
	if o == nil || o.RoomId == nil {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *Room) HasRoomId() bool {
	if o != nil && o.RoomId != nil {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *Room) SetRoomId(v string) {
	o.RoomId = &v
}

// GetVideoId returns the VideoId field value if set, zero value otherwise.
func (o *Room) GetVideoId() string {
	if o == nil || o.VideoId == nil {
		var ret string
		return ret
	}
	return *o.VideoId
}

// GetVideoIdOk returns a tuple with the VideoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Room) GetVideoIdOk() (*string, bool) {
	if o == nil || o.VideoId == nil {
		return nil, false
	}
	return o.VideoId, true
}

// HasVideoId returns a boolean if a field has been set.
func (o *Room) HasVideoId() bool {
	if o != nil && o.VideoId != nil {
		return true
	}

	return false
}

// SetVideoId gets a reference to the given string and assigns it to the VideoId field.
func (o *Room) SetVideoId(v string) {
	o.VideoId = &v
}

// GetAudioCodec returns the AudioCodec field value if set, zero value otherwise.
func (o *Room) GetAudioCodec() string {
	if o == nil || o.AudioCodec == nil {
		var ret string
		return ret
	}
	return *o.AudioCodec
}

// GetAudioCodecOk returns a tuple with the AudioCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Room) GetAudioCodecOk() (*string, bool) {
	if o == nil || o.AudioCodec == nil {
		return nil, false
	}
	return o.AudioCodec, true
}

// HasAudioCodec returns a boolean if a field has been set.
func (o *Room) HasAudioCodec() bool {
	if o != nil && o.AudioCodec != nil {
		return true
	}

	return false
}

// SetAudioCodec gets a reference to the given string and assigns it to the AudioCodec field.
func (o *Room) SetAudioCodec(v string) {
	o.AudioCodec = &v
}

// GetVideoCodec returns the VideoCodec field value if set, zero value otherwise.
func (o *Room) GetVideoCodec() string {
	if o == nil || o.VideoCodec == nil {
		var ret string
		return ret
	}
	return *o.VideoCodec
}

// GetVideoCodecOk returns a tuple with the VideoCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Room) GetVideoCodecOk() (*string, bool) {
	if o == nil || o.VideoCodec == nil {
		return nil, false
	}
	return o.VideoCodec, true
}

// HasVideoCodec returns a boolean if a field has been set.
func (o *Room) HasVideoCodec() bool {
	if o != nil && o.VideoCodec != nil {
		return true
	}

	return false
}

// SetVideoCodec gets a reference to the given string and assigns it to the VideoCodec field.
func (o *Room) SetVideoCodec(v string) {
	o.VideoCodec = &v
}

// GetRecord returns the Record field value if set, zero value otherwise.
func (o *Room) GetRecord() bool {
	if o == nil || o.Record == nil {
		var ret bool
		return ret
	}
	return *o.Record
}

// GetRecordOk returns a tuple with the Record field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Room) GetRecordOk() (*bool, bool) {
	if o == nil || o.Record == nil {
		return nil, false
	}
	return o.Record, true
}

// HasRecord returns a boolean if a field has been set.
func (o *Room) HasRecord() bool {
	if o != nil && o.Record != nil {
		return true
	}

	return false
}

// SetRecord gets a reference to the given bool and assigns it to the Record field.
func (o *Room) SetRecord(v bool) {
	o.Record = &v
}

// GetRoomServerFqdn returns the RoomServerFqdn field value if set, zero value otherwise.
func (o *Room) GetRoomServerFqdn() string {
	if o == nil || o.RoomServerFqdn == nil {
		var ret string
		return ret
	}
	return *o.RoomServerFqdn
}

// GetRoomServerFqdnOk returns a tuple with the RoomServerFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Room) GetRoomServerFqdnOk() (*string, bool) {
	if o == nil || o.RoomServerFqdn == nil {
		return nil, false
	}
	return o.RoomServerFqdn, true
}

// HasRoomServerFqdn returns a boolean if a field has been set.
func (o *Room) HasRoomServerFqdn() bool {
	if o != nil && o.RoomServerFqdn != nil {
		return true
	}

	return false
}

// SetRoomServerFqdn gets a reference to the given string and assigns it to the RoomServerFqdn field.
func (o *Room) SetRoomServerFqdn(v string) {
	o.RoomServerFqdn = &v
}

// GetParticipantsMax returns the ParticipantsMax field value if set, zero value otherwise.
func (o *Room) GetParticipantsMax() int32 {
	if o == nil || o.ParticipantsMax == nil {
		var ret int32
		return ret
	}
	return *o.ParticipantsMax
}

// GetParticipantsMaxOk returns a tuple with the ParticipantsMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Room) GetParticipantsMaxOk() (*int32, bool) {
	if o == nil || o.ParticipantsMax == nil {
		return nil, false
	}
	return o.ParticipantsMax, true
}

// HasParticipantsMax returns a boolean if a field has been set.
func (o *Room) HasParticipantsMax() bool {
	if o != nil && o.ParticipantsMax != nil {
		return true
	}

	return false
}

// SetParticipantsMax gets a reference to the given int32 and assigns it to the ParticipantsMax field.
func (o *Room) SetParticipantsMax(v int32) {
	o.ParticipantsMax = &v
}

// GetParticipants returns the Participants field value if set, zero value otherwise.
func (o *Room) GetParticipants() []Participant {
	if o == nil || o.Participants == nil {
		var ret []Participant
		return ret
	}
	return *o.Participants
}

// GetParticipantsOk returns a tuple with the Participants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Room) GetParticipantsOk() (*[]Participant, bool) {
	if o == nil || o.Participants == nil {
		return nil, false
	}
	return o.Participants, true
}

// HasParticipants returns a boolean if a field has been set.
func (o *Room) HasParticipants() bool {
	if o != nil && o.Participants != nil {
		return true
	}

	return false
}

// SetParticipants gets a reference to the given []Participant and assigns it to the Participants field.
func (o *Room) SetParticipants(v []Participant) {
	o.Participants = &v
}

func (o Room) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RoomId != nil {
		toSerialize["room_id"] = o.RoomId
	}
	if o.VideoId != nil {
		toSerialize["video_id"] = o.VideoId
	}
	if o.AudioCodec != nil {
		toSerialize["audio_codec"] = o.AudioCodec
	}
	if o.VideoCodec != nil {
		toSerialize["video_codec"] = o.VideoCodec
	}
	if o.Record != nil {
		toSerialize["record"] = o.Record
	}
	if o.RoomServerFqdn != nil {
		toSerialize["room_server_fqdn"] = o.RoomServerFqdn
	}
	if o.ParticipantsMax != nil {
		toSerialize["participants_max"] = o.ParticipantsMax
	}
	if o.Participants != nil {
		toSerialize["participants"] = o.Participants
	}
	return json.Marshal(toSerialize)
}

type NullableRoom struct {
	value *Room
	isSet bool
}

func (v NullableRoom) Get() *Room {
	return v.value
}

func (v *NullableRoom) Set(val *Room) {
	v.value = val
	v.isSet = true
}

func (v NullableRoom) IsSet() bool {
	return v.isSet
}

func (v *NullableRoom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoom(val *Room) *NullableRoom {
	return &NullableRoom{value: val, isSet: true}
}

func (v NullableRoom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



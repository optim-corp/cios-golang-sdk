/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// DeviceMonitoringIDsRequest struct for DeviceMonitoringIDsRequest
type DeviceMonitoringIDsRequest struct {
	DeviceIds *[]string `json:"device_ids,omitempty"`
}

// NewDeviceMonitoringIDsRequest instantiates a new DeviceMonitoringIDsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceMonitoringIDsRequest() *DeviceMonitoringIDsRequest {
	this := DeviceMonitoringIDsRequest{}
	return &this
}

// NewDeviceMonitoringIDsRequestWithDefaults instantiates a new DeviceMonitoringIDsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceMonitoringIDsRequestWithDefaults() *DeviceMonitoringIDsRequest {
	this := DeviceMonitoringIDsRequest{}
	return &this
}

// GetDeviceIds returns the DeviceIds field value if set, zero value otherwise.
func (o *DeviceMonitoringIDsRequest) GetDeviceIds() []string {
	if o == nil || o.DeviceIds == nil {
		var ret []string
		return ret
	}
	return *o.DeviceIds
}

// GetDeviceIdsOk returns a tuple with the DeviceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceMonitoringIDsRequest) GetDeviceIdsOk() (*[]string, bool) {
	if o == nil || o.DeviceIds == nil {
		return nil, false
	}
	return o.DeviceIds, true
}

// HasDeviceIds returns a boolean if a field has been set.
func (o *DeviceMonitoringIDsRequest) HasDeviceIds() bool {
	if o != nil && o.DeviceIds != nil {
		return true
	}

	return false
}

// SetDeviceIds gets a reference to the given []string and assigns it to the DeviceIds field.
func (o *DeviceMonitoringIDsRequest) SetDeviceIds(v []string) {
	o.DeviceIds = &v
}

func (o DeviceMonitoringIDsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceIds != nil {
		toSerialize["device_ids"] = o.DeviceIds
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceMonitoringIDsRequest struct {
	value *DeviceMonitoringIDsRequest
	isSet bool
}

func (v NullableDeviceMonitoringIDsRequest) Get() *DeviceMonitoringIDsRequest {
	return v.value
}

func (v *NullableDeviceMonitoringIDsRequest) Set(val *DeviceMonitoringIDsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceMonitoringIDsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceMonitoringIDsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceMonitoringIDsRequest(val *DeviceMonitoringIDsRequest) *NullableDeviceMonitoringIDsRequest {
	return &NullableDeviceMonitoringIDsRequest{value: val, isSet: true}
}

func (v NullableDeviceMonitoringIDsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceMonitoringIDsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



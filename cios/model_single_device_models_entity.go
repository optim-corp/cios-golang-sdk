/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// SingleDeviceModelsEntity struct for SingleDeviceModelsEntity
type SingleDeviceModelsEntity struct {
	Entity DeviceModelsEntity `json:"entity"`
}

// NewSingleDeviceModelsEntity instantiates a new SingleDeviceModelsEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSingleDeviceModelsEntity(entity DeviceModelsEntity, ) *SingleDeviceModelsEntity {
	this := SingleDeviceModelsEntity{}
	this.Entity = entity
	return &this
}

// NewSingleDeviceModelsEntityWithDefaults instantiates a new SingleDeviceModelsEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSingleDeviceModelsEntityWithDefaults() *SingleDeviceModelsEntity {
	this := SingleDeviceModelsEntity{}
	return &this
}

// GetEntity returns the Entity field value
func (o *SingleDeviceModelsEntity) GetEntity() DeviceModelsEntity {
	if o == nil  {
		var ret DeviceModelsEntity
		return ret
	}

	return o.Entity
}

// GetEntityOk returns a tuple with the Entity field value
// and a boolean to check if the value has been set.
func (o *SingleDeviceModelsEntity) GetEntityOk() (*DeviceModelsEntity, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Entity, true
}

// SetEntity sets field value
func (o *SingleDeviceModelsEntity) SetEntity(v DeviceModelsEntity) {
	o.Entity = v
}

func (o SingleDeviceModelsEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entity"] = o.Entity
	}
	return json.Marshal(toSerialize)
}

type NullableSingleDeviceModelsEntity struct {
	value *SingleDeviceModelsEntity
	isSet bool
}

func (v NullableSingleDeviceModelsEntity) Get() *SingleDeviceModelsEntity {
	return v.value
}

func (v *NullableSingleDeviceModelsEntity) Set(val *SingleDeviceModelsEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableSingleDeviceModelsEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableSingleDeviceModelsEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSingleDeviceModelsEntity(val *SingleDeviceModelsEntity) *NullableSingleDeviceModelsEntity {
	return &NullableSingleDeviceModelsEntity{value: val, isSet: true}
}

func (v NullableSingleDeviceModelsEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSingleDeviceModelsEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



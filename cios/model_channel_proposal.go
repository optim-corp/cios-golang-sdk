/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// ChannelProposal struct for ChannelProposal
type ChannelProposal struct {
	ResourceOwnerId string `json:"resource_owner_id"`
	ChannelProtocols *[]ChannelProtocol `json:"channel_protocols,omitempty"`
	DisplayInfo []DisplayInfo `json:"display_info"`
	Labels *[]Label `json:"labels,omitempty"`
	MessagingConfig *MessagingConfig `json:"messaging_config,omitempty"`
	DatastoreConfig *DataStoreConfig `json:"datastore_config,omitempty"`
}

// NewChannelProposal instantiates a new ChannelProposal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelProposal(resourceOwnerId string, displayInfo []DisplayInfo, ) *ChannelProposal {
	this := ChannelProposal{}
	this.ResourceOwnerId = resourceOwnerId
	this.DisplayInfo = displayInfo
	return &this
}

// NewChannelProposalWithDefaults instantiates a new ChannelProposal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelProposalWithDefaults() *ChannelProposal {
	this := ChannelProposal{}
	return &this
}

// GetResourceOwnerId returns the ResourceOwnerId field value
func (o *ChannelProposal) GetResourceOwnerId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ResourceOwnerId
}

// GetResourceOwnerIdOk returns a tuple with the ResourceOwnerId field value
// and a boolean to check if the value has been set.
func (o *ChannelProposal) GetResourceOwnerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceOwnerId, true
}

// SetResourceOwnerId sets field value
func (o *ChannelProposal) SetResourceOwnerId(v string) {
	o.ResourceOwnerId = v
}

// GetChannelProtocols returns the ChannelProtocols field value if set, zero value otherwise.
func (o *ChannelProposal) GetChannelProtocols() []ChannelProtocol {
	if o == nil || o.ChannelProtocols == nil {
		var ret []ChannelProtocol
		return ret
	}
	return *o.ChannelProtocols
}

// GetChannelProtocolsOk returns a tuple with the ChannelProtocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelProposal) GetChannelProtocolsOk() (*[]ChannelProtocol, bool) {
	if o == nil || o.ChannelProtocols == nil {
		return nil, false
	}
	return o.ChannelProtocols, true
}

// HasChannelProtocols returns a boolean if a field has been set.
func (o *ChannelProposal) HasChannelProtocols() bool {
	if o != nil && o.ChannelProtocols != nil {
		return true
	}

	return false
}

// SetChannelProtocols gets a reference to the given []ChannelProtocol and assigns it to the ChannelProtocols field.
func (o *ChannelProposal) SetChannelProtocols(v []ChannelProtocol) {
	o.ChannelProtocols = &v
}

// GetDisplayInfo returns the DisplayInfo field value
func (o *ChannelProposal) GetDisplayInfo() []DisplayInfo {
	if o == nil  {
		var ret []DisplayInfo
		return ret
	}

	return o.DisplayInfo
}

// GetDisplayInfoOk returns a tuple with the DisplayInfo field value
// and a boolean to check if the value has been set.
func (o *ChannelProposal) GetDisplayInfoOk() (*[]DisplayInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DisplayInfo, true
}

// SetDisplayInfo sets field value
func (o *ChannelProposal) SetDisplayInfo(v []DisplayInfo) {
	o.DisplayInfo = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ChannelProposal) GetLabels() []Label {
	if o == nil || o.Labels == nil {
		var ret []Label
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelProposal) GetLabelsOk() (*[]Label, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ChannelProposal) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []Label and assigns it to the Labels field.
func (o *ChannelProposal) SetLabels(v []Label) {
	o.Labels = &v
}

// GetMessagingConfig returns the MessagingConfig field value if set, zero value otherwise.
func (o *ChannelProposal) GetMessagingConfig() MessagingConfig {
	if o == nil || o.MessagingConfig == nil {
		var ret MessagingConfig
		return ret
	}
	return *o.MessagingConfig
}

// GetMessagingConfigOk returns a tuple with the MessagingConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelProposal) GetMessagingConfigOk() (*MessagingConfig, bool) {
	if o == nil || o.MessagingConfig == nil {
		return nil, false
	}
	return o.MessagingConfig, true
}

// HasMessagingConfig returns a boolean if a field has been set.
func (o *ChannelProposal) HasMessagingConfig() bool {
	if o != nil && o.MessagingConfig != nil {
		return true
	}

	return false
}

// SetMessagingConfig gets a reference to the given MessagingConfig and assigns it to the MessagingConfig field.
func (o *ChannelProposal) SetMessagingConfig(v MessagingConfig) {
	o.MessagingConfig = &v
}

// GetDatastoreConfig returns the DatastoreConfig field value if set, zero value otherwise.
func (o *ChannelProposal) GetDatastoreConfig() DataStoreConfig {
	if o == nil || o.DatastoreConfig == nil {
		var ret DataStoreConfig
		return ret
	}
	return *o.DatastoreConfig
}

// GetDatastoreConfigOk returns a tuple with the DatastoreConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelProposal) GetDatastoreConfigOk() (*DataStoreConfig, bool) {
	if o == nil || o.DatastoreConfig == nil {
		return nil, false
	}
	return o.DatastoreConfig, true
}

// HasDatastoreConfig returns a boolean if a field has been set.
func (o *ChannelProposal) HasDatastoreConfig() bool {
	if o != nil && o.DatastoreConfig != nil {
		return true
	}

	return false
}

// SetDatastoreConfig gets a reference to the given DataStoreConfig and assigns it to the DatastoreConfig field.
func (o *ChannelProposal) SetDatastoreConfig(v DataStoreConfig) {
	o.DatastoreConfig = &v
}

func (o ChannelProposal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resource_owner_id"] = o.ResourceOwnerId
	}
	if o.ChannelProtocols != nil {
		toSerialize["channel_protocols"] = o.ChannelProtocols
	}
	if true {
		toSerialize["display_info"] = o.DisplayInfo
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.MessagingConfig != nil {
		toSerialize["messaging_config"] = o.MessagingConfig
	}
	if o.DatastoreConfig != nil {
		toSerialize["datastore_config"] = o.DatastoreConfig
	}
	return json.Marshal(toSerialize)
}

type NullableChannelProposal struct {
	value *ChannelProposal
	isSet bool
}

func (v NullableChannelProposal) Get() *ChannelProposal {
	return v.value
}

func (v *NullableChannelProposal) Set(val *ChannelProposal) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelProposal) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelProposal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelProposal(val *ChannelProposal) *NullableChannelProposal {
	return &NullableChannelProposal{value: val, isSet: true}
}

func (v NullableChannelProposal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelProposal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// MultipleSeriesDataLocationUnix struct for MultipleSeriesDataLocationUnix
type MultipleSeriesDataLocationUnix struct {
	// 検索条件にマッチする全結果数
	Total int64 `json:"total"`
	// 時系列データ配列。データが0件の場合は空配列。
	Data []SeriesDataLocationUnix `json:"data"`
}

// NewMultipleSeriesDataLocationUnix instantiates a new MultipleSeriesDataLocationUnix object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipleSeriesDataLocationUnix(total int64, data []SeriesDataLocationUnix, ) *MultipleSeriesDataLocationUnix {
	this := MultipleSeriesDataLocationUnix{}
	this.Total = total
	this.Data = data
	return &this
}

// NewMultipleSeriesDataLocationUnixWithDefaults instantiates a new MultipleSeriesDataLocationUnix object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipleSeriesDataLocationUnixWithDefaults() *MultipleSeriesDataLocationUnix {
	this := MultipleSeriesDataLocationUnix{}
	return &this
}

// GetTotal returns the Total field value
func (o *MultipleSeriesDataLocationUnix) GetTotal() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *MultipleSeriesDataLocationUnix) GetTotalOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *MultipleSeriesDataLocationUnix) SetTotal(v int64) {
	o.Total = v
}

// GetData returns the Data field value
// If the value is explicit nil, the zero value for []SeriesDataLocationUnix will be returned
func (o *MultipleSeriesDataLocationUnix) GetData() []SeriesDataLocationUnix {
	if o == nil  {
		var ret []SeriesDataLocationUnix
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MultipleSeriesDataLocationUnix) GetDataOk() (*[]SeriesDataLocationUnix, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *MultipleSeriesDataLocationUnix) SetData(v []SeriesDataLocationUnix) {
	o.Data = v
}

func (o MultipleSeriesDataLocationUnix) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total"] = o.Total
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableMultipleSeriesDataLocationUnix struct {
	value *MultipleSeriesDataLocationUnix
	isSet bool
}

func (v NullableMultipleSeriesDataLocationUnix) Get() *MultipleSeriesDataLocationUnix {
	return v.value
}

func (v *NullableMultipleSeriesDataLocationUnix) Set(val *MultipleSeriesDataLocationUnix) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipleSeriesDataLocationUnix) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipleSeriesDataLocationUnix) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipleSeriesDataLocationUnix(val *MultipleSeriesDataLocationUnix) *NullableMultipleSeriesDataLocationUnix {
	return &NullableMultipleSeriesDataLocationUnix{value: val, isSet: true}
}

func (v NullableMultipleSeriesDataLocationUnix) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipleSeriesDataLocationUnix) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



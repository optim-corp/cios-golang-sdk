/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// SingleChannel struct for SingleChannel
type SingleChannel struct {
	Channel Channel `json:"channel"`
}

// NewSingleChannel instantiates a new SingleChannel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSingleChannel(channel Channel, ) *SingleChannel {
	this := SingleChannel{}
	this.Channel = channel
	return &this
}

// NewSingleChannelWithDefaults instantiates a new SingleChannel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSingleChannelWithDefaults() *SingleChannel {
	this := SingleChannel{}
	return &this
}

// GetChannel returns the Channel field value
func (o *SingleChannel) GetChannel() Channel {
	if o == nil  {
		var ret Channel
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *SingleChannel) GetChannelOk() (*Channel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *SingleChannel) SetChannel(v Channel) {
	o.Channel = v
}

func (o SingleChannel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["channel"] = o.Channel
	}
	return json.Marshal(toSerialize)
}

type NullableSingleChannel struct {
	value *SingleChannel
	isSet bool
}

func (v NullableSingleChannel) Get() *SingleChannel {
	return v.value
}

func (v *NullableSingleChannel) Set(val *SingleChannel) {
	v.value = val
	v.isSet = true
}

func (v NullableSingleChannel) IsSet() bool {
	return v.isSet
}

func (v *NullableSingleChannel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSingleChannel(val *SingleChannel) *NullableSingleChannel {
	return &NullableSingleChannel{value: val, isSet: true}
}

func (v NullableSingleChannel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSingleChannel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// PackerFormatJson struct for PackerFormatJson
type PackerFormatJson struct {
	Header PackerFormatJsonHeader `json:"header"`
	Payload interface{} `json:"payload"`
}

// NewPackerFormatJson instantiates a new PackerFormatJson object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackerFormatJson(header PackerFormatJsonHeader, payload interface{}, ) *PackerFormatJson {
	this := PackerFormatJson{}
	this.Header = header
	this.Payload = payload
	return &this
}

// NewPackerFormatJsonWithDefaults instantiates a new PackerFormatJson object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackerFormatJsonWithDefaults() *PackerFormatJson {
	this := PackerFormatJson{}
	return &this
}

// GetHeader returns the Header field value
func (o *PackerFormatJson) GetHeader() PackerFormatJsonHeader {
	if o == nil  {
		var ret PackerFormatJsonHeader
		return ret
	}

	return o.Header
}

// GetHeaderOk returns a tuple with the Header field value
// and a boolean to check if the value has been set.
func (o *PackerFormatJson) GetHeaderOk() (*PackerFormatJsonHeader, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Header, true
}

// SetHeader sets field value
func (o *PackerFormatJson) SetHeader(v PackerFormatJsonHeader) {
	o.Header = v
}

// GetPayload returns the Payload field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *PackerFormatJson) GetPayload() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackerFormatJson) GetPayloadOk() (*interface{}, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *PackerFormatJson) SetPayload(v interface{}) {
	o.Payload = v
}

func (o PackerFormatJson) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["header"] = o.Header
	}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	return json.Marshal(toSerialize)
}

type NullablePackerFormatJson struct {
	value *PackerFormatJson
	isSet bool
}

func (v NullablePackerFormatJson) Get() *PackerFormatJson {
	return v.value
}

func (v *NullablePackerFormatJson) Set(val *PackerFormatJson) {
	v.value = val
	v.isSet = true
}

func (v NullablePackerFormatJson) IsSet() bool {
	return v.isSet
}

func (v *NullablePackerFormatJson) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackerFormatJson(val *PackerFormatJson) *NullablePackerFormatJson {
	return &NullablePackerFormatJson{value: val, isSet: true}
}

func (v NullablePackerFormatJson) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackerFormatJson) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



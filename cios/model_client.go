/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// Client struct for Client
type Client struct {
	ApplicationClient *ApplicationClient `json:"application_client,omitempty"`
	DeviceClient *DeviceClient `json:"device_client,omitempty"`
}

// NewClient instantiates a new Client object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClient() *Client {
	this := Client{}
	return &this
}

// NewClientWithDefaults instantiates a new Client object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientWithDefaults() *Client {
	this := Client{}
	return &this
}

// GetApplicationClient returns the ApplicationClient field value if set, zero value otherwise.
func (o *Client) GetApplicationClient() ApplicationClient {
	if o == nil || o.ApplicationClient == nil {
		var ret ApplicationClient
		return ret
	}
	return *o.ApplicationClient
}

// GetApplicationClientOk returns a tuple with the ApplicationClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetApplicationClientOk() (*ApplicationClient, bool) {
	if o == nil || o.ApplicationClient == nil {
		return nil, false
	}
	return o.ApplicationClient, true
}

// HasApplicationClient returns a boolean if a field has been set.
func (o *Client) HasApplicationClient() bool {
	if o != nil && o.ApplicationClient != nil {
		return true
	}

	return false
}

// SetApplicationClient gets a reference to the given ApplicationClient and assigns it to the ApplicationClient field.
func (o *Client) SetApplicationClient(v ApplicationClient) {
	o.ApplicationClient = &v
}

// GetDeviceClient returns the DeviceClient field value if set, zero value otherwise.
func (o *Client) GetDeviceClient() DeviceClient {
	if o == nil || o.DeviceClient == nil {
		var ret DeviceClient
		return ret
	}
	return *o.DeviceClient
}

// GetDeviceClientOk returns a tuple with the DeviceClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetDeviceClientOk() (*DeviceClient, bool) {
	if o == nil || o.DeviceClient == nil {
		return nil, false
	}
	return o.DeviceClient, true
}

// HasDeviceClient returns a boolean if a field has been set.
func (o *Client) HasDeviceClient() bool {
	if o != nil && o.DeviceClient != nil {
		return true
	}

	return false
}

// SetDeviceClient gets a reference to the given DeviceClient and assigns it to the DeviceClient field.
func (o *Client) SetDeviceClient(v DeviceClient) {
	o.DeviceClient = &v
}

func (o Client) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationClient != nil {
		toSerialize["application_client"] = o.ApplicationClient
	}
	if o.DeviceClient != nil {
		toSerialize["device_client"] = o.DeviceClient
	}
	return json.Marshal(toSerialize)
}

type NullableClient struct {
	value *Client
	isSet bool
}

func (v NullableClient) Get() *Client {
	return v.value
}

func (v *NullableClient) Set(val *Client) {
	v.value = val
	v.isSet = true
}

func (v NullableClient) IsSet() bool {
	return v.isSet
}

func (v *NullableClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClient(val *Client) *NullableClient {
	return &NullableClient{value: val, isSet: true}
}

func (v NullableClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// MultipleChanel struct for MultipleChanel
type MultipleChanel struct {
	Total int64 `json:"total"`
	Channels []Channel `json:"channels"`
}

// NewMultipleChanel instantiates a new MultipleChanel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipleChanel(total int64, channels []Channel, ) *MultipleChanel {
	this := MultipleChanel{}
	this.Total = total
	this.Channels = channels
	return &this
}

// NewMultipleChanelWithDefaults instantiates a new MultipleChanel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipleChanelWithDefaults() *MultipleChanel {
	this := MultipleChanel{}
	return &this
}

// GetTotal returns the Total field value
func (o *MultipleChanel) GetTotal() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *MultipleChanel) GetTotalOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *MultipleChanel) SetTotal(v int64) {
	o.Total = v
}

// GetChannels returns the Channels field value
func (o *MultipleChanel) GetChannels() []Channel {
	if o == nil  {
		var ret []Channel
		return ret
	}

	return o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value
// and a boolean to check if the value has been set.
func (o *MultipleChanel) GetChannelsOk() (*[]Channel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Channels, true
}

// SetChannels sets field value
func (o *MultipleChanel) SetChannels(v []Channel) {
	o.Channels = v
}

func (o MultipleChanel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["channels"] = o.Channels
	}
	return json.Marshal(toSerialize)
}

type NullableMultipleChanel struct {
	value *MultipleChanel
	isSet bool
}

func (v NullableMultipleChanel) Get() *MultipleChanel {
	return v.value
}

func (v *NullableMultipleChanel) Set(val *MultipleChanel) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipleChanel) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipleChanel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipleChanel(val *MultipleChanel) *NullableMultipleChanel {
	return &NullableMultipleChanel{value: val, isSet: true}
}

func (v NullableMultipleChanel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipleChanel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



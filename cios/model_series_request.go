/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// SeriesRequest struct for SeriesRequest
type SeriesRequest struct {
	Location *CollectionLocation `json:"location,omitempty"`
	Measurements *map[string]map[string]interface{} `json:"measurements,omitempty"`
	SeriesId string `json:"series_id"`
	Timestamp int64 `json:"timestamp"`
}

// NewSeriesRequest instantiates a new SeriesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeriesRequest(seriesId string, timestamp int64, ) *SeriesRequest {
	this := SeriesRequest{}
	this.SeriesId = seriesId
	this.Timestamp = timestamp
	return &this
}

// NewSeriesRequestWithDefaults instantiates a new SeriesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeriesRequestWithDefaults() *SeriesRequest {
	this := SeriesRequest{}
	return &this
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *SeriesRequest) GetLocation() CollectionLocation {
	if o == nil || o.Location == nil {
		var ret CollectionLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesRequest) GetLocationOk() (*CollectionLocation, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *SeriesRequest) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given CollectionLocation and assigns it to the Location field.
func (o *SeriesRequest) SetLocation(v CollectionLocation) {
	o.Location = &v
}

// GetMeasurements returns the Measurements field value if set, zero value otherwise.
func (o *SeriesRequest) GetMeasurements() map[string]map[string]interface{} {
	if o == nil || o.Measurements == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Measurements
}

// GetMeasurementsOk returns a tuple with the Measurements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesRequest) GetMeasurementsOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.Measurements == nil {
		return nil, false
	}
	return o.Measurements, true
}

// HasMeasurements returns a boolean if a field has been set.
func (o *SeriesRequest) HasMeasurements() bool {
	if o != nil && o.Measurements != nil {
		return true
	}

	return false
}

// SetMeasurements gets a reference to the given map[string]map[string]interface{} and assigns it to the Measurements field.
func (o *SeriesRequest) SetMeasurements(v map[string]map[string]interface{}) {
	o.Measurements = &v
}

// GetSeriesId returns the SeriesId field value
func (o *SeriesRequest) GetSeriesId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SeriesId
}

// GetSeriesIdOk returns a tuple with the SeriesId field value
// and a boolean to check if the value has been set.
func (o *SeriesRequest) GetSeriesIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SeriesId, true
}

// SetSeriesId sets field value
func (o *SeriesRequest) SetSeriesId(v string) {
	o.SeriesId = v
}

// GetTimestamp returns the Timestamp field value
func (o *SeriesRequest) GetTimestamp() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *SeriesRequest) GetTimestampOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *SeriesRequest) SetTimestamp(v int64) {
	o.Timestamp = v
}

func (o SeriesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Measurements != nil {
		toSerialize["measurements"] = o.Measurements
	}
	if true {
		toSerialize["series_id"] = o.SeriesId
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullableSeriesRequest struct {
	value *SeriesRequest
	isSet bool
}

func (v NullableSeriesRequest) Get() *SeriesRequest {
	return v.value
}

func (v *NullableSeriesRequest) Set(val *SeriesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSeriesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSeriesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeriesRequest(val *SeriesRequest) *NullableSeriesRequest {
	return &NullableSeriesRequest{value: val, isSet: true}
}

func (v NullableSeriesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeriesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



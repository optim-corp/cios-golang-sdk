/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// MultipleMemberInfo struct for MultipleMemberInfo
type MultipleMemberInfo struct {
	Total *int64 `json:"total,omitempty"`
	Members *[]MemberInfo `json:"members,omitempty"`
}

// NewMultipleMemberInfo instantiates a new MultipleMemberInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipleMemberInfo() *MultipleMemberInfo {
	this := MultipleMemberInfo{}
	return &this
}

// NewMultipleMemberInfoWithDefaults instantiates a new MultipleMemberInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipleMemberInfoWithDefaults() *MultipleMemberInfo {
	this := MultipleMemberInfo{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *MultipleMemberInfo) GetTotal() int64 {
	if o == nil || o.Total == nil {
		var ret int64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipleMemberInfo) GetTotalOk() (*int64, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *MultipleMemberInfo) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int64 and assigns it to the Total field.
func (o *MultipleMemberInfo) SetTotal(v int64) {
	o.Total = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *MultipleMemberInfo) GetMembers() []MemberInfo {
	if o == nil || o.Members == nil {
		var ret []MemberInfo
		return ret
	}
	return *o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipleMemberInfo) GetMembersOk() (*[]MemberInfo, bool) {
	if o == nil || o.Members == nil {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *MultipleMemberInfo) HasMembers() bool {
	if o != nil && o.Members != nil {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []MemberInfo and assigns it to the Members field.
func (o *MultipleMemberInfo) SetMembers(v []MemberInfo) {
	o.Members = &v
}

func (o MultipleMemberInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.Members != nil {
		toSerialize["members"] = o.Members
	}
	return json.Marshal(toSerialize)
}

type NullableMultipleMemberInfo struct {
	value *MultipleMemberInfo
	isSet bool
}

func (v NullableMultipleMemberInfo) Get() *MultipleMemberInfo {
	return v.value
}

func (v *NullableMultipleMemberInfo) Set(val *MultipleMemberInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipleMemberInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipleMemberInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipleMemberInfo(val *MultipleMemberInfo) *NullableMultipleMemberInfo {
	return &NullableMultipleMemberInfo{value: val, isSet: true}
}

func (v NullableMultipleMemberInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipleMemberInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



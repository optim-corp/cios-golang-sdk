/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// DevicePolicy struct for DevicePolicy
type DevicePolicy struct {
	PolicyId string `json:"policy_id"`
	ActivationKey *string `json:"activation_key,omitempty"`
	ResourceOwnerId string `json:"resource_owner_id"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
}

// NewDevicePolicy instantiates a new DevicePolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevicePolicy(policyId string, resourceOwnerId string, createdAt string, updatedAt string, ) *DevicePolicy {
	this := DevicePolicy{}
	this.PolicyId = policyId
	this.ResourceOwnerId = resourceOwnerId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewDevicePolicyWithDefaults instantiates a new DevicePolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevicePolicyWithDefaults() *DevicePolicy {
	this := DevicePolicy{}
	return &this
}

// GetPolicyId returns the PolicyId field value
func (o *DevicePolicy) GetPolicyId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value
// and a boolean to check if the value has been set.
func (o *DevicePolicy) GetPolicyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PolicyId, true
}

// SetPolicyId sets field value
func (o *DevicePolicy) SetPolicyId(v string) {
	o.PolicyId = v
}

// GetActivationKey returns the ActivationKey field value if set, zero value otherwise.
func (o *DevicePolicy) GetActivationKey() string {
	if o == nil || o.ActivationKey == nil {
		var ret string
		return ret
	}
	return *o.ActivationKey
}

// GetActivationKeyOk returns a tuple with the ActivationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicePolicy) GetActivationKeyOk() (*string, bool) {
	if o == nil || o.ActivationKey == nil {
		return nil, false
	}
	return o.ActivationKey, true
}

// HasActivationKey returns a boolean if a field has been set.
func (o *DevicePolicy) HasActivationKey() bool {
	if o != nil && o.ActivationKey != nil {
		return true
	}

	return false
}

// SetActivationKey gets a reference to the given string and assigns it to the ActivationKey field.
func (o *DevicePolicy) SetActivationKey(v string) {
	o.ActivationKey = &v
}

// GetResourceOwnerId returns the ResourceOwnerId field value
func (o *DevicePolicy) GetResourceOwnerId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ResourceOwnerId
}

// GetResourceOwnerIdOk returns a tuple with the ResourceOwnerId field value
// and a boolean to check if the value has been set.
func (o *DevicePolicy) GetResourceOwnerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceOwnerId, true
}

// SetResourceOwnerId sets field value
func (o *DevicePolicy) SetResourceOwnerId(v string) {
	o.ResourceOwnerId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DevicePolicy) GetCreatedAt() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DevicePolicy) GetCreatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DevicePolicy) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *DevicePolicy) GetUpdatedAt() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *DevicePolicy) GetUpdatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *DevicePolicy) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o DevicePolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["policy_id"] = o.PolicyId
	}
	if o.ActivationKey != nil {
		toSerialize["activation_key"] = o.ActivationKey
	}
	if true {
		toSerialize["resource_owner_id"] = o.ResourceOwnerId
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableDevicePolicy struct {
	value *DevicePolicy
	isSet bool
}

func (v NullableDevicePolicy) Get() *DevicePolicy {
	return v.value
}

func (v *NullableDevicePolicy) Set(val *DevicePolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableDevicePolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableDevicePolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevicePolicy(val *DevicePolicy) *NullableDevicePolicy {
	return &NullableDevicePolicy{value: val, isSet: true}
}

func (v NullableDevicePolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevicePolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



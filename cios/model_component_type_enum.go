/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
	"fmt"
)

// ComponentTypeEnum the model 'ComponentTypeEnum'
type ComponentTypeEnum string

// List of ComponentTypeEnum
const (
	PRODUCT ComponentTypeEnum = "product"
	UNIT ComponentTypeEnum = "unit"
	PARTS ComponentTypeEnum = "parts"
	SENSOR ComponentTypeEnum = "sensor"
	SOFTWARE ComponentTypeEnum = "software"
	INSTRUMENT ComponentTypeEnum = "instrument"
)

func (v *ComponentTypeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ComponentTypeEnum(value)
	for _, existing := range []ComponentTypeEnum{ "product", "unit", "parts", "sensor", "software", "instrument",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ComponentTypeEnum", value)
}

// Ptr returns reference to ComponentTypeEnum value
func (v ComponentTypeEnum) Ptr() *ComponentTypeEnum {
	return &v
}

type NullableComponentTypeEnum struct {
	value *ComponentTypeEnum
	isSet bool
}

func (v NullableComponentTypeEnum) Get() *ComponentTypeEnum {
	return v.value
}

func (v *NullableComponentTypeEnum) Set(val *ComponentTypeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableComponentTypeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableComponentTypeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponentTypeEnum(val *ComponentTypeEnum) *NullableComponentTypeEnum {
	return &NullableComponentTypeEnum{value: val, isSet: true}
}

func (v NullableComponentTypeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponentTypeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


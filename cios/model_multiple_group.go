/*
 * Cios Openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cios

import (
	"encoding/json"
)

// MultipleGroup struct for MultipleGroup
type MultipleGroup struct {
	Total int64 `json:"total"`
	Groups []Group `json:"groups"`
}

// NewMultipleGroup instantiates a new MultipleGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipleGroup(total int64, groups []Group, ) *MultipleGroup {
	this := MultipleGroup{}
	this.Total = total
	this.Groups = groups
	return &this
}

// NewMultipleGroupWithDefaults instantiates a new MultipleGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipleGroupWithDefaults() *MultipleGroup {
	this := MultipleGroup{}
	return &this
}

// GetTotal returns the Total field value
func (o *MultipleGroup) GetTotal() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *MultipleGroup) GetTotalOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *MultipleGroup) SetTotal(v int64) {
	o.Total = v
}

// GetGroups returns the Groups field value
func (o *MultipleGroup) GetGroups() []Group {
	if o == nil  {
		var ret []Group
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
func (o *MultipleGroup) GetGroupsOk() (*[]Group, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Groups, true
}

// SetGroups sets field value
func (o *MultipleGroup) SetGroups(v []Group) {
	o.Groups = v
}

func (o MultipleGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["groups"] = o.Groups
	}
	return json.Marshal(toSerialize)
}

type NullableMultipleGroup struct {
	value *MultipleGroup
	isSet bool
}

func (v NullableMultipleGroup) Get() *MultipleGroup {
	return v.value
}

func (v *NullableMultipleGroup) Set(val *MultipleGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipleGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipleGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipleGroup(val *MultipleGroup) *NullableMultipleGroup {
	return &NullableMultipleGroup{value: val, isSet: true}
}

func (v NullableMultipleGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipleGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



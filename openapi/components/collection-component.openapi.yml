openapi: 3.0.3
info:
  title: Collection Component
  description: Component
  version: 1.0.0

paths: {}

components:
  schemas:
    CollectionLatestRequest:
      required:
        - resource_owner_id
      type: object
      properties:
        resource_owner_id:
          type: string
          format: uuid
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        projection:
          type: string
          default: data
          enum: [ data, thumbnail, image ]
    CollectionLatest:
      type: object
      properties:
        resource_owner_id:
          type: string
        location:
          $ref: '#/components/schemas/CollectionLocation'
        measurements:
          type: object
        series_id:
          type: string
        timestamp:
          type: string
        image:
          type: string
        image_type:
          type: string
          enum: [ jpeg, png ]
    CollectionLocation:
      type: object
      required:
        - coordinates
        - type
      properties:
        type:
          type: string
          enum: [ Point ]
          default: Point
        coordinates:
          type: array
          items:
#            anyOf:
#              - description: 経度
#                example: 138.5
#                format: double
#                maximum: 180
#                minimum: -180
#              - description: 緯度
#                example: 48.2
#                format: double
#                maximum: 90
#                minimum: -90
#              - description: 高度
#                example: 12.3
#                format: double
            type: number
          maxItems: 3
          minItems: 2
    CollectionStatus:
      example:
        status: READY
        properties:
          status:
            description: |-
              状態

              アーカイブ・リストア状態:

              | 状態 | 内容 | 遷移理由 | 使用可能なAPI |
              | :-- | :-- | :-- | :-- |
              | READY | 正常 | 指定されたresource_owner_idの時系列データに対しアーカイブ操作が加えられていない、もしくはリストアが正常終了した。 | Restore 以外 |
              | ARCHIVED | アーカイブ済み | 指定されたresource_owner_idの時系列データに対しアーカイブ操作が加えられ正常終了した。 | Restore |
              |ARCHIVING|アーカイブ実施中|指定されたresource_owner_idの時系列データに対しアーカイブ操作が加えられ、アーカイブ実行中|-|
              |ARCHIVE_ERROR|アーカイブ失敗|アーカイブ実行に失敗|Archive|
              |RESTORING|リストア実施中|アーカイブされた時系列データに対しリストア操作が加えられ、リストア実行中|-|
              |RESTORE_ERROR|リストア失敗|リストア実行に失敗|Restore|
            enum:
              - READY
              - ARCHIVING
              - ARCHIVE_ERROR
              - ARCHIVED
              - RESTORING
              - RESTORE_ERROR
            example: READY
            type: string
        required:
          - status
        type: object
    MultipleCollectionLatest:
      type: object
      required:
        - total
        - data
      properties:
        total:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: '#/components/schemas/CollectionLatest'
        image_map:
          type: object
    MultipleSeriesDataLocationUnix:
      type: object
      required:
        - data
        - total
      properties:
        total:
          description: 検索条件にマッチする全結果数
          example: 1
          format: int64
          type: integer
        data:
          description: 時系列データ配列。データが0件の場合は空配列。
          items:
            $ref: '#/components/schemas/SeriesDataLocationUnix'
          nullable: true
          type: array
    MultipleSeriesImage:
      type: object
      properties:
        total:
          description: 検索条件にマッチする全結果数
          example: 1
          format: int64
          type: integer
        data:
          description: 画像データとタイムスタンプの配列。データが0件の場合は空配列。
          items:
            $ref: '#/components/schemas/SeriesImage'
          type: array
        image_map:
          additionalProperties:
            description: キーに対応する画像のindex
            minimum: 0
            type: integer
          description: timestampがキーとなってdataのindexが格納されているhashmap
          type: object
      required:
        - data
        - image_map
        - total
    SeriesAggregationRequest:
      type: object
#      anyOf:
#        - description: integer型の計測値の集計方法を指定する
#          properties:
#            target:
#              description: コレクションに定義されているinteger型の計測値のプロパティをjsonpathで指定する
#              pattern: ^$.measurements.[a-zA-Z][a-zA-Z0-9_]{1,34}[a-zA-Z]$
#              type: string
#            method:
#              description: |-
#                計測値をintervalごとに集計する方法として、以下からいずれかの値を指定する
#
#                |値|集約方法|
#                |---|---|
#                |first|単位時間(interval)ごとに区切り、先頭の値を使用する。先頭がnullの場合はnullとなる。|
#                |last|単位時間(interval)ごとに区切り、末尾の値を使用する。末尾がnullの場合はnullとなる。|
#                |average|単位時間(interval)ごとに区切り、平均値を算出する。レスポンスは64bit浮動小数点数となる。値がnullのデータは集計に使用しない。|
#                |max|単位時間(interval)ごとに区切り、最大値を使用する。値がnullのデータは集計に使用しない。|
#                |min|単位時間(interval)ごとに区切り、最小値を使用する。値がnullのデータは集計に使用しない。|
#                |sum|単位時間(interval)ごとに区切り、合計値を算出する。64bit整数の範囲を超えた場合は、64bit整数の最大値/最小値に丸められる。値がnullのデータは集計に使用しない。|
#              enum:
#                - first
#                - last
#                - average
#                - max
#                - min
#                - sum
#              type: string
#          required:
#            - method
#            - target
#          title: Aggregation(Integer)
#          type: object
#        - description: number型の計測値の集計方法を指定する
#          properties:
#            target:
#              description: コレクションに定義されているnumber型の計測値のプロパティをjsonpathで指定する
#              pattern: ^$.measurements.[a-zA-Z][a-zA-Z0-9_]{1,34}[a-zA-Z]$
#              type: string
#            method:
#              description: |-
#                計測値をintervalごとに集約する方法として、以下からいずれかの値を指定する
#
#                |値|集約方法|
#                |---|---|
#                |first|単位時間(interval)ごとに区切り、先頭の値を使用する。先頭がnullの場合はnullとなる。|
#                |last|単位時間(interval)ごとに区切り、末尾の値を使用する。末尾がnullの場合はnullとなる。|
#                |average|単位時間(interval)ごとに区切り、平均値を算出する。値がnullのデータは集計に使用しない。|
#                |max|単位時間(interval)ごとに区切り、最大値を使用する。値がnullのデータは集計に使用しない。|
#                |min|単位時間(interval)ごとに区切り、最小値を使用する。値がnullのデータは集計に使用しない。|
#                |sum|単位時間(interval)ごとに区切り、合計値を算出する。64bit浮動小数点数の範囲を超えた場合は、64bit浮動小数点数の最大値/最小値に丸められる。値がnullのデータは集計に使用しない。|
#              enum:
#                - first
#                - last
#                - average
#                - max
#                - min
#                - sum
#              type: string
#          required:
#            - method
#            - target
#          title: Aggregation(Number)
#          type: object
#        - description: string型の計測値の集計方法を指定する
#          properties:
#            target:
#              description: コレクションに定義されているstring型の計測値のプロパティをjsonpathで指定する
#              pattern: ^$.measurements.[a-zA-Z][a-zA-Z0-9_]{1,34}[a-zA-Z]$
#              type: string
#            method:
#              description: |-
#                計測値をintervalごとに集約する方法として、以下からいずれかの値を指定する
#
#                |値|集約方法|
#                |---|---|
#                |first|単位時間(interval)ごとに区切り、先頭の値を使用する。先頭がnullの場合はnullとなる。|
#                |last|単位時間(interval)ごとに区切り、末尾の値を使用する。末尾がnullの場合はnullとなる。|
#              enum:
#                - first
#                - last
#              type: string
#          required:
#            - method
#            - target
#          title: Aggregation(String)
#          type: object
#        - description: boolean型の計測値の集計方法を指定する
#          properties:
#            target:
#              description: コレクションに定義されているboolean型の計測値のプロパティをjsonpathで指定する
#              pattern: ^$.measurements.[a-zA-Z][a-zA-Z0-9_]{1,34}[a-zA-Z]$
#              type: string
#            method:
#              description: |-
#                位置情報をintervalごとに集約する方法として、以下からいずれかの値を指定する
#
#                |値|集約方法|
#                |---|---|
#                |first|単位時間(interval)ごとに区切り、先頭の値を使用する。先頭がnullの場合はnullとなる。|
#                |last|単位時間(interval)ごとに区切り、末尾の値を使用する。末尾がnullの場合はnullとなる。|
#              enum:
#                - first
#                - last
#              type: string
#          required:
#            - method
#            - target
#          title: Aggregation(Boolean)
#          type: object
#        - description: 位置情報の集計方法を指定する
#          properties:
#            target:
#              description: $.locationを指定する
#              example: $.location
#              pattern: ^\$\.location$
#              type: string
#            method:
#              description: |-
#                値をintervalごとに集約する方法として、以下からいずれかの値を指定する
#
#                |値|集約方法|
#                |---|---|
#                |first|単位時間(interval)ごとに区切り、先頭の値を使用する。データが存在しないintervalはnullとなる。|
#                |last|単位時間(interval)ごとに区切り、先頭の値を使用する。データが存在しないintervalはnullとなる。|
#              enum:
#                - first
#                - last
#              type: string
#          required:
#            - method
#            - target
#          title: Aggregation(Location)
#          type: object
    SeriesRequest:
      type: object
      required:
        - series_id
        - timestamp
      properties:
        location:
          $ref: '#/components/schemas/CollectionLocation'
        measurements:
          type: object
          additionalProperties: true
        series_id:
          type: string
          pattern: ^[a-zA-Z0-9]{1,10}:[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{1,34}[a-zA-Z0-9]{1}$
        timestamp:
          type: integer
          format: int64
    SeriesBulkRequest:
      type: object
      required:
        - data
        - series_id
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SeriesRequest'
    SeriesDataBulkRequest:
      type: object
      properties:
        data:
          type: array
          maxItems: 36000
          description: 時系列データの配列、配列の長さ上限 36000
          items:
            $ref: '#/components/schemas/SeriesDataLocationUnix'
      required:
        - data
    SeriesDataRequest:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/SeriesDataLocation'
        measurements:
          type: object
          additionalProperties: true
          description: |-
            計測値。送信可能なプロパティはcollectionによって異なる。
            collectionごとの定義は[Available Collections](./docs/available-collections.html)を参照。

            以下の場合はリクエスト不正となる。
            - collectionに定義されていないプロパティがmeasurementsに含まれる場合
            - measurementsのJSON Objectのサイズが350KB以上の場合
    SeriesImage:
      example:
        image: /9j/4AAQSkZJRgABAQEAYwBjAAD/4QBaRXhpZgAA...
        timestamp: '{}'
        image_type: jpeg
      properties:
        timestamp:
          type: string
        image:
          description: base64エンコードされた画像データ
          example: /9j/4AAQSkZJRgABAQEAYwBjAAD/4QBaRXhpZgAA...
          type: string
        image_type:
          description: 画像データのフォーマット
          enum:
            - jpeg
            - png
          example: jpeg
          type: string
      required:
        - image
        - image_type
        - timestamp
      type: object
    SeriesDataLocationUnix:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/SeriesDataLocation'
        measurements:
          type: object
          additionalProperties: true
          description: |-
            計測値。送信可能なプロパティはcollectionによって異なる。
            collectionごとの定義は[Available Collections](./docs/available-collections.html)を参照。

            以下の場合はリクエスト不正となる。
            - collectionに定義されていないプロパティがmeasurementsに含まれる場合
            - measurementsのJSON Objectのサイズが350KB以上の場合
        timestamp:
          type: string
    SeriesDataLocation:
      description: デバイス位置情報。コレクションの定義に依存。schema.location_typeが”POINT“の場合必須、”NONE”の場合はlocationをリクエストに含めることはできない
      example:
        type: Point
        coordinates:
          - 138.5
          - 48.2
      nullable: true
      properties:
        type:
          description: Point固定
          enum:
            - Point
          example: Point
          type: string
        coordinates:
          type: array
          items:
            type: number
      required:
        - coordinates
        - type
      type: object
    SeriesAggregations:
      type: object
      properties:
        intervals:
          description: intervalの開始時刻の配列
          items:
            description: intervalの開始時刻。UNIXタイム(ミリ秒)
            example: 1594282220566
            format: int64
            maximum: 253402300799999
            type: integer
          type: array
        total_counts:
          description: intervalごとの時系列データ件数の配列
          items:
            description: intervalごとの時系列データ件数
            example: 10
            format: int64
            minimum: 0
            type: integer
          type: array
        aggregations:
          description: 集計結果の配列。リクエストで指定された集計対象・集計方法の順で並んでいる
          items: {}
#            $ref: '#/components/schemas/SeriesAggregation'
          maxItems: 10
          type: array
      required:
        - intervals
        - total_counts
    SeriesAggregation:
      type: object
      properties:
        target:
          description: リクエストボディで指定された集計対象項目
          example: $.measurements.speed
          type: string
        method:
          description: リクエストボディで指定された集計方法
          enum:
            - first
            - last
            - average
            - max
            - min
            - sum
          example: average
          type: string
        counts:
          description: intervalごとの集計対象項目が有効だったデータ件数の配列
          items:
            description: intervalごとの集計対象項目が有効だったデータ件数
            example: 8
            format: int64
            minimum: 0
            type: integer
          type: array
        values:
          description: intervalごとの集計結果の配列
          type: array

      #          items:
##            anyOf:
##              - description: integer型の計測値の集計結果
##                type: integer
##              - description: number型の計測値の集計結果
##                type: number
##              - description: string型の計測値の集計結果
##                type: string
##              - description: boolean型の計測値の集計結果
##                type: boolean
##              - description: 位置情報の集計結果
##                items:
##                  anyOf:
##                    - description: 経度
##                      example: 138.5
##                      format: double
##                      maximum: 180
##                      minimum: -180
##                    - description: 緯度
##                      example: 48.2
##                      format: double
##                      maximum: 90
##                      minimum: -90
##                    - description: 高度
##                      example: 12.3
##                      format: double
##                  type: number
#                maxItems: 3
#                minItems: 2
#                title: Coordinate
#                type: array
      required:
        - counts
        - method
        - target
        - values
    RecordedDates:
      type: object
      properties:
        dates:
          description: データが存在する日付のリスト Ex.[1, 20, 22, 23]
          items:
            description: 該当するデータ
            example: 11
            format: int64
            maximum: 31
            minimum: 1
            type: integer
          maxItems: 31
          type: array
          uniqueItems: true
      required:
        - dates
